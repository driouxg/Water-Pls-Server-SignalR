# Tutorial pulled from:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/docker?view=azure-devops
#
# This pipeline is essentially going to automatically build and push a docker image
# to our docker registry/repository.

# define the trigger
trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'Ubuntu-16.04'

# Here are our build variables, whereas we can store more secret keys in the pipeline variables.
variables:
  dockerId: driouxg    # Replace with your Docker ID for Docker Hub or the admin user name for the Azure Container Registry
  imageName: water-pls-docker  # Replace with the name of the image you want to publish
  kubernetesCluster: dryoxAKSCluster
  azureResourceGroup: dryoxResourceGroup

steps:
## Deploy the application
- script: |
    docker build -t $(dockerId)/$(imageName) .
    docker login -u $(dockerId) -p $DOCKER_PASSWORD
    docker push $(dockerId)/$(imageName)
  env:
    DOCKER_PASSWORD: $(dockerPassword)

# Create docker secret
- task: Kubernetes@1
  displayName: Create Docker Secret for Image pulled
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: 'dryoxResourceGroup'
    azureResourceGroup: $(azureResourceGroup)
    kubernetesCluster: $(kubernetesCluster)
    command: create
    arguments: secret docker-registry regcred --docker-server=$(env:dockerRegistryServer) --docker-username=$(env:dockerUsername) --docker-password=$(env:dockerPassword) --docker-email=$(env:dockerEmail)

# Run a deployment using our Kubernetes Service, with our deplyoment file.
- task: Kubernetes@1
  displayName: kubectl apply using Kubernetes Deployment File
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: 'dryoxResourceManager'
    azureResourceGroup: $(azureResourceGroup)
    kubernetesCluster: $(kubernetesCluster)
    command: apply
    #arguments: -f deployment-server.yaml
    useConfigurationFile: true
    configuration: deployment-server.yaml
  env:
    AZURE_SUBSCRIPTION_ENDPOINT: $(azureSubscriptionEndpoint)